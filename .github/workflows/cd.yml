name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---- Meta (version/env/sha) ----
      - name: ðŸ”Ž Derive version + env + short sha
        id: meta
        shell: bash
        run: |
          echo "GIT_SHA_SHORT=${GITHUB_SHA::8}" >> "$GITHUB_ENV"

          APP_VERSION=$(grep -E '^APP_VERSION=' .env.example | cut -d= -f2- | tr -d '"' || true)
          APP_ENV=$(grep -E '^APP_ENV=' .env.example | cut -d= -f2- | tr -d '"' || true)

          : "${APP_VERSION:=0.0.0}"
          : "${APP_ENV:=production}"

          echo "APP_VERSION=${APP_VERSION}" >> "$GITHUB_ENV"
          echo "APP_ENV=${APP_ENV}" >> "$GITHUB_ENV"

      # ---- Create version.json (valid JSON!) ----
      - name: ðŸ§¾ Write version.json
        shell: bash
        run: |
          mkdir -p public/build
          cat > public/build/version.json <<JSON
          {
            "version": "${APP_VERSION}",
            "sha": "${GIT_SHA_SHORT}",
            "env": "${APP_ENV}",
            "built_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          JSON
          echo "Wrote public/build/version.json:"
          cat public/build/version.json

      # ---- Frontend build ----
      - name: ðŸŸ¢ Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: ðŸ“¦ Install & build assets
        run: |
          npm ci
          npm run build

      - name: Copy FilePond & Cropper to /public/vendor/bladewind (resilient)
        shell: bash
        run: |
          set -e

          # helper: copy first existing file from args to dest
          cp_first () {
            dest="$1"; shift
            for src in "$@"; do
              if [ -f "$src" ]; then
                cp "$src" "$dest"
                echo "âœ” copied $(basename "$src") -> $dest"
                return 0
              fi
            done
            echo "âš  skipped $(basename "$dest") (no source found)" >&2
            return 0
          }

          mkdir -p public/vendor/bladewind/js public/vendor/bladewind/css

          # Core
          cp_first public/vendor/bladewind/js/filepond.min.js \
            node_modules/filepond/dist/filepond.min.js \
            node_modules/filepond/dist/filepond.js

          cp_first public/vendor/bladewind/css/filepond.css \
            node_modules/filepond/dist/filepond.min.css \
            node_modules/filepond/dist/filepond.css

          # Plugins (JS)
          cp_first public/vendor/bladewind/js/filepond-plugin-image-preview.js \
            node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.js \
            node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js

          cp_first public/vendor/bladewind/js/filepond-plugin-file-encode.js \
            node_modules/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.min.js \
            node_modules/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.js

          cp_first public/vendor/bladewind/js/filepond-plugin-file-validate-type.js \
            node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.min.js \
            node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js

          cp_first public/vendor/bladewind/js/filepond-plugin-file-validate-size.js \
            node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.min.js \
            node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js

          cp_first public/vendor/bladewind/js/filepond-plugin-image-exif-orientation.js \
            node_modules/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.min.js \
            node_modules/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.js

          cp_first public/vendor/bladewind/js/filepond-plugin-image-crop.js \
            node_modules/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.min.js \
            node_modules/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.js

          cp_first public/vendor/bladewind/js/filepond-plugin-image-resize.js \
            node_modules/filepond-plugin-image-resize/dist/filepond-plugin-image-resize.min.js \
            node_modules/filepond-plugin-image-resize/dist/filepond-plugin-image-resize.js

          cp_first public/vendor/bladewind/js/filepond-plugin-image-transform.js \
            node_modules/filepond-plugin-image-transform/dist/filepond-plugin-image-transform.min.js \
            node_modules/filepond-plugin-image-transform/dist/filepond-plugin-image-transform.js

          # Plugin CSS
          cp_first public/vendor/bladewind/css/filepond-plugin-image-preview.css \
            node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css \
            node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css

          # Cropper
          cp_first public/vendor/bladewind/js/cropper.min.js \
            node_modules/cropperjs/dist/cropper.min.js \
            node_modules/cropperjs/dist/cropper.js

          cp_first public/vendor/bladewind/css/cropper.min.css \
            node_modules/cropperjs/dist/cropper.min.css \
            node_modules/cropperjs/dist/cropper.css


      # ---- FTP Deploy ----
      - name: ðŸš€ FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server:   ${{ secrets.PROD_FTP_SERVER }}
          username: ${{ secrets.PROD_FTP_USERNAME }}
          password: ${{ secrets.PROD_FTP_PASSWORD }}
          exclude: |
            **/.git*
            node_modules/**
            /vendor/**
            storage/logs/**
            storage/framework/cache/**
            storage/framework/sessions/**
            storage/framework/views/**

      # ---- SSH post-deploy steps on server ----
      - name: ðŸ”‘ SSH and run commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd www/klio.lchsd.ch

            /usr/local/php84/bin/composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            /usr/local/php84/bin/php artisan migrate

            # clear + warm caches safely after migrations
            /usr/local/php84/bin/php artisan config:clear
            /usr/local/php84/bin/php artisan route:clear
            /usr/local/php84/bin/php artisan view:clear
            /usr/local/php84/bin/php artisan cache:clear

            # If you depend on Bladewind public files, ensure they exist
            mkdir -p public/vendor/bladewind/js public/vendor/bladewind/css || true
            [ -f vendor/mkocansey/bladewind/public/js/helpers.js ] && cp -f vendor/mkocansey/bladewind/public/js/helpers.js public/vendor/bladewind/js/ || true
            [ -f vendor/mkocansey/bladewind/public/css/bladewind-ui.min.css ] && cp -f vendor/mkocansey/bladewind/public/css/bladewind-ui.min.css public/vendor/bladewind/css/ || true
            [ -f vendor/mkocansey/bladewind/public/css/animate.min.css ] && cp -f vendor/mkocansey/bladewind/public/css/animate.min.css public/vendor/bladewind/css/ || true

            find public/vendor/bladewind -type d -exec chmod 755 {} \; || true
            find public/vendor/bladewind -type f -exec chmod 644 {} \; || true
